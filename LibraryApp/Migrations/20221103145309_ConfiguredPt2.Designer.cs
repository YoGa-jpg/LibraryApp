// <auto-generated />
using System;
using LibraryApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221103145309_ConfiguredPt2")]
    partial class ConfiguredPt2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryApp.Domain.Core.Book", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Роберт Шекли",
                            Title = "Секретное оружие"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Фрэнк Герберт",
                            OrderId = 2,
                            Title = "Дюна"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Рэй Брэдбери",
                            Title = "451 градус по фаренгейту"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Борис Стругацкий",
                            Title = "Пикник на обочине"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Дмитрий Глуховский",
                            Title = "Метро 2033"
                        });
                });

            modelBuilder.Entity("LibraryApp.Domain.Core.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId")
                        .IsUnique()
                        .HasFilter("[BookId] IS NOT NULL");

                    b.HasIndex("ReaderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            ExpireDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2022, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReaderId = 2
                        });
                });

            modelBuilder.Entity("LibraryApp.Domain.Core.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Firstname = "Антон",
                            Lastname = "Давидович"
                        },
                        new
                        {
                            Id = 2,
                            Firstname = "Филипп",
                            Lastname = "Приходько"
                        },
                        new
                        {
                            Id = 3,
                            Firstname = "Вахид",
                            Lastname = "Уходько"
                        });
                });

            modelBuilder.Entity("LibraryApp.Domain.Core.Order", b =>
                {
                    b.HasOne("LibraryApp.Domain.Core.Book", "Book")
                        .WithOne("Order")
                        .HasForeignKey("LibraryApp.Domain.Core.Order", "BookId");

                    b.HasOne("LibraryApp.Domain.Core.Reader", "Reader")
                        .WithMany("Orders")
                        .HasForeignKey("ReaderId");

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("LibraryApp.Domain.Core.Book", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("LibraryApp.Domain.Core.Reader", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
